WARNING: 
1. before you start configure, please ensure you give enough volume for donwloading all packages,
2. also change 4651_project.pem to your one
3. change some part of command to fit to your EC2 machine, like public address
4. send_request is the code to ask request to the classification.py which execute in ec2, use test_image.jpg as example

If you want to execute classification_with_s3, please prepare your OWN S3 bucket to test it. 
And the requirement for using it is exactly the same as list below, but it is required that the 
"requirements_s3.txt" is also required to install under pip besides "requirements.txt". Besides, it is also 
required to install different packages. Instead of installing requirements.txt you should install from requirements_sport.txt




sudo apt-get update
sudo apt-get upgrade -y

sudo apt-get install -y build-essential python3.10-dev libssl-dev libffi-dev

# Add deadsnakes PPA
sudo add-apt-repository ppa:deadsnakes/ppa

# Update package list
sudo apt update

# Now install Python 3.10 and venv
sudo apt install python3.10 python3.10-venv python3.10-distutils

# Create project directory
mkdir classification
cd classification

#This one run in local environment
scp -i 4651_project.pem classification.py ubuntu@ec2-18-207-212-8.compute-1.amazonaws.com:~/classification/
scp -i 4651_project.pem requirements.txt ubuntu@ec2-18-207-212-8.compute-1.amazonaws.com:~/classification/
scp -i 4651_project.pem mnist_cnn.pth ubuntu@ec2-18-207-212-8.compute-1.amazonaws.com:~/classification/       

# Create a virtual environment
python3.10 -m venv myenv
source myenv/bin/activate

pip install -r requirements.txt OR
"""
pip install numpy==1.24.3
pip install werkzeug==2.0.3
pip install flask==2.0.1
pip install torch==2.0.1
pip install torchvision==0.15.2
pip install Pillow==10.0.0
pip install gunicorn==20.1.0
"""

# Install gunicorn
pip install gunicorn

#Create systemd service file
sudo nano /etc/systemd/system/classification.service

'''
[Unit]
Description=Classification API
After=network.target

[Service]
User=ubuntu
WorkingDirectory=/home/ubuntu/classification
Environment="PATH=/home/ubuntu/classification/myenv/bin"
Environment="PYTHONPATH=/home/ubuntu/classification"
ExecStart=/home/ubuntu/classification/myenv/bin/python3 /home/ubuntu/classification/classification.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
'''

sudo systemctl start classification
sudo systemctl enable classification
